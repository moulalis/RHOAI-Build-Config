name: check-trigger

on:
  check_run:
    types:
      - completed  # Listen for check completion

jobs:
  trigger-on-konflux:
    runs-on: ubuntu-latest
    
    steps:
      - name: Debug Event Payload
        run: echo '${{ toJson(github.event) }}'

      - name: Print Check Run Name and Conclusion
        run: |
          echo "CI Check Name: '${{ github.event.check_run.name }}'"
          echo "Check Conclusion: '${{ github.event.check_run.conclusion }}'"

      - name: Evaluate If Condition
        id: condition_check
        run: |
          CHECK_NAME="${{ github.event.check_run.name }}"
          CONCLUSION="${{ github.event.check_run.conclusion }}"
          echo "Check Name: $CHECK_NAME"
          echo "Conclusion: $CONCLUSION"
          
          if [[ "$CONCLUSION" == "success" ]] && \
             [[ "$CHECK_NAME" == "Konflux Production Internal / rhoai-fbc-fragment-v"* ]] && \
             ([[ "$CHECK_NAME" == *"-schedule" ]] || 
              [[ "$CHECK_NAME" == *"-on-schedule" ]] || 
              [[ "$CHECK_NAME" == *"-scheduled" ]]); then
            echo "Condition matched, proceeding..."
            exit 0
          else
            echo "Condition did not match, skipping workflow."
            exit 1
          fi
        continue-on-error: true

      - name: Generate github-app token
        id: app-token
        if: steps.condition_check.outcome == 'success'
        uses: getsentry/action-github-app-token@v2
        with:
          app_id: ${{ secrets.RHOAI_DEVOPS_APP_ID }}
          private_key: ${{ secrets.RHOAI_DEVOPS_APP_PRIVATE_KEY }}

      - name: Trigger conforma workflow
        id: trigger-conforma-workflow
        if: steps.condition_check.outcome == 'success'
        uses: lasith-kg/dispatch-workflow@v2.0.0
        with:
          dispatch-method: workflow_dispatch
          repo: conforma-reporter
          owner: red-hat-data-services
          workflow: main.yaml 
          token: ${{ steps.app-token.outputs.token }}
          workflow-inputs: '{"snapshot_target": "${{ github.ref_name }}"}'
          ref: 'main'
